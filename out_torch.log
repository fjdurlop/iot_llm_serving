None
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

INFRASTRUCTURE -> torch

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Running experiment infrastructure -> torch, model -> pythia-410m, dataset -> testing/inputs.txt, reps -> 1

------------------------------

---------------- Rep 1 out of 1: 

Running POST requests infrastructure -> torch, model -> pythia-410m, dataset -> testing/inputs.txt

Dataset: ['def hello_world():', 'for i in range(10):']
---
Running POST requests infrastructure -> torch, model -> pythia-410m, dataset -> ['def hello_world():', 'for i in range(10):']

___________________________________
Endpoint: http://localhost:8000/huggingface_models/pythia-410m/torch
{'message': 'OK', 'method': 'POST', 'status-code': 200, 'timestamp': '2024-06-12T17:37:51.929619', 'url': 'http://localhost:8000/huggingface_models/pythia-410m/torch', 'data': {'model-type': 'Pythia_410m', 'input_text': 'def hello_world():', 'prediction': {'prediction': 'def hello_world():\n        print("Hello World")\n\nif __name__ == "'}}}
Inference successful!
{'prediction': 'def hello_world():\n        print("Hello World")\n\nif __name__ == "'}
___________________________________
Endpoint: http://localhost:8000/huggingface_models/pythia-410m/torch
{'message': 'OK', 'method': 'POST', 'status-code': 200, 'timestamp': '2024-06-12T17:37:57.742390', 'url': 'http://localhost:8000/huggingface_models/pythia-410m/torch', 'data': {'model-type': 'Pythia_410m', 'input_text': 'for i in range(10):', 'prediction': {'prediction': 'for i in range(10):\n        if i % 10 == 0:\n            print('}}}
Inference successful!
{'prediction': 'for i in range(10):\n        if i % 10 == 0:\n            print('}


CodeCarbon Results: results/emissions_pythia-410m.csv
------------------------------

